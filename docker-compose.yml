version: '3.8'

services:
  postgres:
    image: postgres:14-alpine
    container_name: event-orchestrator-db
    ports:
      - '5432:5432'
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=event_orchestrator
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ['CMD-SHELL', 'pg_isready -U postgres']
      interval: 5s
      timeout: 5s
      retries: 5

  redis:
    image: redis:6-alpine
    container_name: event-orchestrator-redis
    ports:
      - '6379:6379'
    volumes:
      - redis_data:/data
    command: redis-server --appendonly yes
    healthcheck:
      test: ['CMD', 'redis-cli', 'ping']
      interval: 5s
      timeout: 5s
      retries: 5

  # app:
  #   build:
  #     context: .
  #     dockerfile: Dockerfile
  #   container_name: event-orchestrator-app
  #   ports:
  #     - '3000:3000'
  #   volumes:
  #     - .:/usr/src/app
  #     - /usr/src/app/node_modules
  #   environment:
  #     - NODE_ENV=development
  #     - DATABASE_URL=postgresql://postgres:postgres@postgres:5432/event_orchestrator?schema=public
  #     - REDIS_URL=redis://redis:6379
  #   depends_on:
  #     postgres:
  #       condition: service_healthy
  #     redis:
  #       condition: service_healthy

  prisma-studio:
    image: node:18-alpine
    container_name: event-orchestrator-prisma-studio
    ports:
      - '5555:5555'
    volumes:
      - .:/usr/src/app
      - /usr/src/app/node_modules
    working_dir: /usr/src/app
    environment:
      - DATABASE_URL=postgresql://postgres:postgres@postgres:5432/event_orchestrator?schema=public
    command: npx prisma studio
    depends_on:
      postgres:
        condition: service_healthy

volumes:
  postgres_data:
  redis_data:
